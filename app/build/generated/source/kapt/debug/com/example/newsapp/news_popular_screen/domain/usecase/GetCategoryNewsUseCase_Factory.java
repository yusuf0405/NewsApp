// Generated by Dagger (https://dagger.dev).
package com.example.newsapp.news_popular_screen.domain.usecase;

import com.example.newsapp.news_popular_screen.domain.repository.PopularNewsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetCategoryNewsUseCase_Factory implements Factory<GetCategoryNewsUseCase> {
  private final Provider<PopularNewsRepository> repositoryProvider;

  public GetCategoryNewsUseCase_Factory(Provider<PopularNewsRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetCategoryNewsUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetCategoryNewsUseCase_Factory create(
      Provider<PopularNewsRepository> repositoryProvider) {
    return new GetCategoryNewsUseCase_Factory(repositoryProvider);
  }

  public static GetCategoryNewsUseCase newInstance(PopularNewsRepository repository) {
    return new GetCategoryNewsUseCase(repository);
  }
}
